@model doc.insure.entities.models.Document

@{
    ViewBag.Title = "Create";
}

<h2>Create</h2>


@*@using (Html.BeginForm())*@ 
@using (Html.BeginForm("FileUploadCreate", "Documents", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>Document</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @*<div class="form-group">
            @Html.LabelFor(model => model.AppUserId, "AppUserId", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("AppUserId", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.AppUserId, "", new { @class = "text-danger" })
            </div>
        </div>*@

        <div class="form-group">
            @*@Html.LabelFor(model => model.DocumentCategoryId, "DocumentCategoryId", htmlAttributes: new { @class = "control-label col-md-2" })*@
            <label class="control-label col-md-2">Document Type</label>
            <div class="col-md-10">
                @Html.DropDownList("DocumentCategoryId", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.DocumentCategoryId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @*@Html.LabelFor(model => model.DocumentTitle, htmlAttributes: new { @class = "control-label col-md-2" })*@
            <label class="control-label col-md-2">Title</label>
            <div class="col-md-10">
                @Html.EditorFor(model => model.DocumentTitle, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.DocumentTitle, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @*@Html.LabelFor(model => model.DocumentDescription, htmlAttributes: new { @class = "control-label col-md-2" })*@
            <label class="control-label col-md-2">Description</label>
            <div class="col-md-10">
                @Html.EditorFor(model => model.DocumentDescription, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.DocumentDescription, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <label for="file" class="control-label col-md-2">Upload Image</label>
            <div class="col-md-10">
                <input type="file" name="file" id="file" style="width: 100%;" />
            </div>
        </div>


        @*<div class="form-group">
            @Html.LabelFor(model => model.DocumentGUID, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.DocumentGUID, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.DocumentGUID, "", new { @class = "text-danger" })
            </div>
        </div>*@

        @*<div class="form-group">
            @Html.LabelFor(model => model.DocumentLink, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.DocumentLink, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.DocumentLink, "", new { @class = "text-danger" })
            </div>
        </div>*@

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
